name: backend pipeline

on:
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: backend
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'
        cache-dependency-path: backend/go.sum
    - name: Install sqlc
      run: go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest
    - name: SQLC checkss
      run: |
        sqlc vet
        sqlc diff
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v7
      with:
        version: latest
        working-directory: backend

  test:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: backend
    steps:
    - uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'
        cache-dependency-path: backend/go.sum
    - name: Install dependencies
      run: go mod download
    - name: Run Unit Tests
      run: go test -covermode=atomic -coverprofile=coverage.out $(cat testdirs.txt)

  build:
    needs: [lint, test]
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3
      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: false
          tags: |
            ghcr.io/eeritvan/backend:${{ github.sha }}
            ghcr.io/eeritvan/backend:latest
          cache-from: type=registry,ref=ghcr.io/eeritvan/backend:buildcache
          cache-to: type=registry,ref=ghcr.io/eeritvan/backend:buildcache,mode=max
          outputs: type=docker,dest=${{ runner.temp }}/backend-image.tar
      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-image
          path: ${{ runner.temp }}/backend-image.tar
